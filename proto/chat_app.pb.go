// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.2
// source: chat_app.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type User_Type int32

const (
	User_UNKNOWN User_Type = 0
	User_EXPERT  User_Type = 1
	User_PATIENT User_Type = 2
)

// Enum value maps for User_Type.
var (
	User_Type_name = map[int32]string{
		0: "UNKNOWN",
		1: "EXPERT",
		2: "PATIENT",
	}
	User_Type_value = map[string]int32{
		"UNKNOWN": 0,
		"EXPERT":  1,
		"PATIENT": 2,
	}
)

func (x User_Type) Enum() *User_Type {
	p := new(User_Type)
	*p = x
	return p
}

func (x User_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (User_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_app_proto_enumTypes[0].Descriptor()
}

func (User_Type) Type() protoreflect.EnumType {
	return &file_chat_app_proto_enumTypes[0]
}

func (x User_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use User_Type.Descriptor instead.
func (User_Type) EnumDescriptor() ([]byte, []int) {
	return file_chat_app_proto_rawDescGZIP(), []int{1, 0}
}

type User_UserStatusCode int32

const (
	User_UNKNOWN_STATUS User_UserStatusCode = 0
	User_LOGGED_OUT     User_UserStatusCode = 1
	User_OFFLINE        User_UserStatusCode = 2
	User_ONLINE         User_UserStatusCode = 3
)

// Enum value maps for User_UserStatusCode.
var (
	User_UserStatusCode_name = map[int32]string{
		0: "UNKNOWN_STATUS",
		1: "LOGGED_OUT",
		2: "OFFLINE",
		3: "ONLINE",
	}
	User_UserStatusCode_value = map[string]int32{
		"UNKNOWN_STATUS": 0,
		"LOGGED_OUT":     1,
		"OFFLINE":        2,
		"ONLINE":         3,
	}
)

func (x User_UserStatusCode) Enum() *User_UserStatusCode {
	p := new(User_UserStatusCode)
	*p = x
	return p
}

func (x User_UserStatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (User_UserStatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_app_proto_enumTypes[1].Descriptor()
}

func (User_UserStatusCode) Type() protoreflect.EnumType {
	return &file_chat_app_proto_enumTypes[1]
}

func (x User_UserStatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use User_UserStatusCode.Descriptor instead.
func (User_UserStatusCode) EnumDescriptor() ([]byte, []int) {
	return file_chat_app_proto_rawDescGZIP(), []int{1, 1}
}

type ConnectUserRequest_Type int32

const (
	ConnectUserRequest_UNKNOWN ConnectUserRequest_Type = 0
	ConnectUserRequest_EXPERT  ConnectUserRequest_Type = 1
	ConnectUserRequest_PATIENT ConnectUserRequest_Type = 2
)

// Enum value maps for ConnectUserRequest_Type.
var (
	ConnectUserRequest_Type_name = map[int32]string{
		0: "UNKNOWN",
		1: "EXPERT",
		2: "PATIENT",
	}
	ConnectUserRequest_Type_value = map[string]int32{
		"UNKNOWN": 0,
		"EXPERT":  1,
		"PATIENT": 2,
	}
)

func (x ConnectUserRequest_Type) Enum() *ConnectUserRequest_Type {
	p := new(ConnectUserRequest_Type)
	*p = x
	return p
}

func (x ConnectUserRequest_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectUserRequest_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_app_proto_enumTypes[2].Descriptor()
}

func (ConnectUserRequest_Type) Type() protoreflect.EnumType {
	return &file_chat_app_proto_enumTypes[2]
}

func (x ConnectUserRequest_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectUserRequest_Type.Descriptor instead.
func (ConnectUserRequest_Type) EnumDescriptor() ([]byte, []int) {
	return file_chat_app_proto_rawDescGZIP(), []int{2, 0}
}

type ChatMessageStatus_MessageStatus int32

const (
	ChatMessageStatus_UNKNOWN_STATUS ChatMessageStatus_MessageStatus = 0
	ChatMessageStatus_DELIVERED      ChatMessageStatus_MessageStatus = 1
	ChatMessageStatus_SEEN           ChatMessageStatus_MessageStatus = 2
	ChatMessageStatus_NOT_DELIVERED  ChatMessageStatus_MessageStatus = 3
	ChatMessageStatus_FAILED         ChatMessageStatus_MessageStatus = 4
)

// Enum value maps for ChatMessageStatus_MessageStatus.
var (
	ChatMessageStatus_MessageStatus_name = map[int32]string{
		0: "UNKNOWN_STATUS",
		1: "DELIVERED",
		2: "SEEN",
		3: "NOT_DELIVERED",
		4: "FAILED",
	}
	ChatMessageStatus_MessageStatus_value = map[string]int32{
		"UNKNOWN_STATUS": 0,
		"DELIVERED":      1,
		"SEEN":           2,
		"NOT_DELIVERED":  3,
		"FAILED":         4,
	}
)

func (x ChatMessageStatus_MessageStatus) Enum() *ChatMessageStatus_MessageStatus {
	p := new(ChatMessageStatus_MessageStatus)
	*p = x
	return p
}

func (x ChatMessageStatus_MessageStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatMessageStatus_MessageStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_app_proto_enumTypes[3].Descriptor()
}

func (ChatMessageStatus_MessageStatus) Type() protoreflect.EnumType {
	return &file_chat_app_proto_enumTypes[3]
}

func (x ChatMessageStatus_MessageStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatMessageStatus_MessageStatus.Descriptor instead.
func (ChatMessageStatus_MessageStatus) EnumDescriptor() ([]byte, []int) {
	return file_chat_app_proto_rawDescGZIP(), []int{5, 0}
}

type ChatMessageResponse_MessageStatus int32

const (
	ChatMessageResponse_UNKNOWN_STATUS ChatMessageResponse_MessageStatus = 0
	ChatMessageResponse_DELIVERED      ChatMessageResponse_MessageStatus = 1
	ChatMessageResponse_SEEN           ChatMessageResponse_MessageStatus = 2
	ChatMessageResponse_NOT_DELIVERED  ChatMessageResponse_MessageStatus = 3
	ChatMessageResponse_FAILED         ChatMessageResponse_MessageStatus = 4
)

// Enum value maps for ChatMessageResponse_MessageStatus.
var (
	ChatMessageResponse_MessageStatus_name = map[int32]string{
		0: "UNKNOWN_STATUS",
		1: "DELIVERED",
		2: "SEEN",
		3: "NOT_DELIVERED",
		4: "FAILED",
	}
	ChatMessageResponse_MessageStatus_value = map[string]int32{
		"UNKNOWN_STATUS": 0,
		"DELIVERED":      1,
		"SEEN":           2,
		"NOT_DELIVERED":  3,
		"FAILED":         4,
	}
)

func (x ChatMessageResponse_MessageStatus) Enum() *ChatMessageResponse_MessageStatus {
	p := new(ChatMessageResponse_MessageStatus)
	*p = x
	return p
}

func (x ChatMessageResponse_MessageStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatMessageResponse_MessageStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_app_proto_enumTypes[4].Descriptor()
}

func (ChatMessageResponse_MessageStatus) Type() protoreflect.EnumType {
	return &file_chat_app_proto_enumTypes[4]
}

func (x ChatMessageResponse_MessageStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatMessageResponse_MessageStatus.Descriptor instead.
func (ChatMessageResponse_MessageStatus) EnumDescriptor() ([]byte, []int) {
	return file_chat_app_proto_rawDescGZIP(), []int{6, 0}
}

type FileUploadStatus_UploadStatusCode int32

const (
	FileUploadStatus_UNKNOWN_STATUS FileUploadStatus_UploadStatusCode = 0
	FileUploadStatus_OK             FileUploadStatus_UploadStatusCode = 1
	FileUploadStatus_FAILED         FileUploadStatus_UploadStatusCode = 2
)

// Enum value maps for FileUploadStatus_UploadStatusCode.
var (
	FileUploadStatus_UploadStatusCode_name = map[int32]string{
		0: "UNKNOWN_STATUS",
		1: "OK",
		2: "FAILED",
	}
	FileUploadStatus_UploadStatusCode_value = map[string]int32{
		"UNKNOWN_STATUS": 0,
		"OK":             1,
		"FAILED":         2,
	}
)

func (x FileUploadStatus_UploadStatusCode) Enum() *FileUploadStatus_UploadStatusCode {
	p := new(FileUploadStatus_UploadStatusCode)
	*p = x
	return p
}

func (x FileUploadStatus_UploadStatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileUploadStatus_UploadStatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_app_proto_enumTypes[5].Descriptor()
}

func (FileUploadStatus_UploadStatusCode) Type() protoreflect.EnumType {
	return &file_chat_app_proto_enumTypes[5]
}

func (x FileUploadStatus_UploadStatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileUploadStatus_UploadStatusCode.Descriptor instead.
func (FileUploadStatus_UploadStatusCode) EnumDescriptor() ([]byte, []int) {
	return file_chat_app_proto_rawDescGZIP(), []int{10, 0}
}

type QueryUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *QueryUser) Reset() {
	*x = QueryUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_app_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUser) ProtoMessage() {}

func (x *QueryUser) ProtoReflect() protoreflect.Message {
	mi := &file_chat_app_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUser.ProtoReflect.Descriptor instead.
func (*QueryUser) Descriptor() ([]byte, []int) {
	return file_chat_app_proto_rawDescGZIP(), []int{0}
}

func (x *QueryUser) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string              `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name   string              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status User_UserStatusCode `protobuf:"varint,3,opt,name=status,proto3,enum=proto.chat_app.User_UserStatusCode" json:"status,omitempty"`
	Type   User_Type           `protobuf:"varint,4,opt,name=type,proto3,enum=proto.chat_app.User_Type" json:"type,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_app_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_chat_app_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_chat_app_proto_rawDescGZIP(), []int{1}
}

func (x *User) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetStatus() User_UserStatusCode {
	if x != nil {
		return x.Status
	}
	return User_UNKNOWN_STATUS
}

func (x *User) GetType() User_Type {
	if x != nil {
		return x.Type
	}
	return User_UNKNOWN
}

type ConnectUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string                  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name   string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Device string                  `protobuf:"bytes,3,opt,name=device,proto3" json:"device,omitempty"`
	Type   ConnectUserRequest_Type `protobuf:"varint,4,opt,name=type,proto3,enum=proto.chat_app.ConnectUserRequest_Type" json:"type,omitempty"`
}

func (x *ConnectUserRequest) Reset() {
	*x = ConnectUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_app_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectUserRequest) ProtoMessage() {}

func (x *ConnectUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_app_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectUserRequest.ProtoReflect.Descriptor instead.
func (*ConnectUserRequest) Descriptor() ([]byte, []int) {
	return file_chat_app_proto_rawDescGZIP(), []int{2}
}

func (x *ConnectUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ConnectUserRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConnectUserRequest) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *ConnectUserRequest) GetType() ConnectUserRequest_Type {
	if x != nil {
		return x.Type
	}
	return ConnectUserRequest_UNKNOWN
}

type DisconnectUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User   *User  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Device string `protobuf:"bytes,2,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *DisconnectUserRequest) Reset() {
	*x = DisconnectUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_app_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisconnectUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectUserRequest) ProtoMessage() {}

func (x *DisconnectUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_app_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectUserRequest.ProtoReflect.Descriptor instead.
func (*DisconnectUserRequest) Descriptor() ([]byte, []int) {
	return file_chat_app_proto_rawDescGZIP(), []int{3}
}

func (x *DisconnectUserRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *DisconnectUserRequest) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

type ChatMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatId         string `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	FromUser       *User  `protobuf:"bytes,2,opt,name=from_user,json=fromUser,proto3" json:"from_user,omitempty"`
	ToUser         *User  `protobuf:"bytes,3,opt,name=to_user,json=toUser,proto3" json:"to_user,omitempty"`
	Body           string `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	TimeStamp      string `protobuf:"bytes,5,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"`
	ReplyForChatId string `protobuf:"bytes,6,opt,name=reply_for_chat_id,json=replyForChatId,proto3" json:"reply_for_chat_id,omitempty"`
	Attachment     bool   `protobuf:"varint,7,opt,name=attachment,proto3" json:"attachment,omitempty"`
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_app_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_chat_app_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_chat_app_proto_rawDescGZIP(), []int{4}
}

func (x *ChatMessage) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

func (x *ChatMessage) GetFromUser() *User {
	if x != nil {
		return x.FromUser
	}
	return nil
}

func (x *ChatMessage) GetToUser() *User {
	if x != nil {
		return x.ToUser
	}
	return nil
}

func (x *ChatMessage) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *ChatMessage) GetTimeStamp() string {
	if x != nil {
		return x.TimeStamp
	}
	return ""
}

func (x *ChatMessage) GetReplyForChatId() string {
	if x != nil {
		return x.ReplyForChatId
	}
	return ""
}

func (x *ChatMessage) GetAttachment() bool {
	if x != nil {
		return x.Attachment
	}
	return false
}

type ChatMessageStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatMessage *ChatMessage                    `protobuf:"bytes,1,opt,name=chat_message,json=chatMessage,proto3" json:"chat_message,omitempty"`
	MsgStatus   ChatMessageStatus_MessageStatus `protobuf:"varint,2,opt,name=msg_status,json=msgStatus,proto3,enum=proto.chat_app.ChatMessageStatus_MessageStatus" json:"msg_status,omitempty"`
}

func (x *ChatMessageStatus) Reset() {
	*x = ChatMessageStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_app_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessageStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessageStatus) ProtoMessage() {}

func (x *ChatMessageStatus) ProtoReflect() protoreflect.Message {
	mi := &file_chat_app_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessageStatus.ProtoReflect.Descriptor instead.
func (*ChatMessageStatus) Descriptor() ([]byte, []int) {
	return file_chat_app_proto_rawDescGZIP(), []int{5}
}

func (x *ChatMessageStatus) GetChatMessage() *ChatMessage {
	if x != nil {
		return x.ChatMessage
	}
	return nil
}

func (x *ChatMessageStatus) GetMsgStatus() ChatMessageStatus_MessageStatus {
	if x != nil {
		return x.MsgStatus
	}
	return ChatMessageStatus_UNKNOWN_STATUS
}

type ChatMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatMessage *ChatMessage                      `protobuf:"bytes,1,opt,name=chat_message,json=chatMessage,proto3" json:"chat_message,omitempty"`
	MsgStatus   ChatMessageResponse_MessageStatus `protobuf:"varint,2,opt,name=msg_status,json=msgStatus,proto3,enum=proto.chat_app.ChatMessageResponse_MessageStatus" json:"msg_status,omitempty"`
}

func (x *ChatMessageResponse) Reset() {
	*x = ChatMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_app_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessageResponse) ProtoMessage() {}

func (x *ChatMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_app_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessageResponse.ProtoReflect.Descriptor instead.
func (*ChatMessageResponse) Descriptor() ([]byte, []int) {
	return file_chat_app_proto_rawDescGZIP(), []int{6}
}

func (x *ChatMessageResponse) GetChatMessage() *ChatMessage {
	if x != nil {
		return x.ChatMessage
	}
	return nil
}

func (x *ChatMessageResponse) GetMsgStatus() ChatMessageResponse_MessageStatus {
	if x != nil {
		return x.MsgStatus
	}
	return ChatMessageResponse_UNKNOWN_STATUS
}

type QueryMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User1          *User  `protobuf:"bytes,1,opt,name=user1,proto3" json:"user1,omitempty"`
	User2          *User  `protobuf:"bytes,2,opt,name=user2,proto3" json:"user2,omitempty"`
	TimeConstraint string `protobuf:"bytes,3,opt,name=time_constraint,json=timeConstraint,proto3" json:"time_constraint,omitempty"`
	Limit          int32  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *QueryMessagesRequest) Reset() {
	*x = QueryMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_app_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMessagesRequest) ProtoMessage() {}

func (x *QueryMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_app_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMessagesRequest.ProtoReflect.Descriptor instead.
func (*QueryMessagesRequest) Descriptor() ([]byte, []int) {
	return file_chat_app_proto_rawDescGZIP(), []int{7}
}

func (x *QueryMessagesRequest) GetUser1() *User {
	if x != nil {
		return x.User1
	}
	return nil
}

func (x *QueryMessagesRequest) GetUser2() *User {
	if x != nil {
		return x.User2
	}
	return nil
}

func (x *QueryMessagesRequest) GetTimeConstraint() string {
	if x != nil {
		return x.TimeConstraint
	}
	return ""
}

func (x *QueryMessagesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type QueryMessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User1    *User          `protobuf:"bytes,1,opt,name=user1,proto3" json:"user1,omitempty"`
	User2    *User          `protobuf:"bytes,2,opt,name=user2,proto3" json:"user2,omitempty"`
	Messages []*ChatMessage `protobuf:"bytes,3,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *QueryMessagesResponse) Reset() {
	*x = QueryMessagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_app_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMessagesResponse) ProtoMessage() {}

func (x *QueryMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_app_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMessagesResponse.ProtoReflect.Descriptor instead.
func (*QueryMessagesResponse) Descriptor() ([]byte, []int) {
	return file_chat_app_proto_rawDescGZIP(), []int{8}
}

func (x *QueryMessagesResponse) GetUser1() *User {
	if x != nil {
		return x.User1
	}
	return nil
}

func (x *QueryMessagesResponse) GetUser2() *User {
	if x != nil {
		return x.User2
	}
	return nil
}

func (x *QueryMessagesResponse) GetMessages() []*ChatMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

type FileUploadChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to UploadData:
	//	*FileUploadChunk_Info
	//	*FileUploadChunk_Content
	UploadData isFileUploadChunk_UploadData `protobuf_oneof:"UploadData"`
}

func (x *FileUploadChunk) Reset() {
	*x = FileUploadChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_app_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileUploadChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadChunk) ProtoMessage() {}

func (x *FileUploadChunk) ProtoReflect() protoreflect.Message {
	mi := &file_chat_app_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadChunk.ProtoReflect.Descriptor instead.
func (*FileUploadChunk) Descriptor() ([]byte, []int) {
	return file_chat_app_proto_rawDescGZIP(), []int{9}
}

func (m *FileUploadChunk) GetUploadData() isFileUploadChunk_UploadData {
	if m != nil {
		return m.UploadData
	}
	return nil
}

func (x *FileUploadChunk) GetInfo() *FileUploadChunk_FileUpload {
	if x, ok := x.GetUploadData().(*FileUploadChunk_Info); ok {
		return x.Info
	}
	return nil
}

func (x *FileUploadChunk) GetContent() []byte {
	if x, ok := x.GetUploadData().(*FileUploadChunk_Content); ok {
		return x.Content
	}
	return nil
}

type isFileUploadChunk_UploadData interface {
	isFileUploadChunk_UploadData()
}

type FileUploadChunk_Info struct {
	Info *FileUploadChunk_FileUpload `protobuf:"bytes,1,opt,name=info,proto3,oneof"`
}

type FileUploadChunk_Content struct {
	Content []byte `protobuf:"bytes,2,opt,name=content,proto3,oneof"`
}

func (*FileUploadChunk_Info) isFileUploadChunk_UploadData() {}

func (*FileUploadChunk_Content) isFileUploadChunk_UploadData() {}

type FileUploadStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string                            `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status  FileUploadStatus_UploadStatusCode `protobuf:"varint,2,opt,name=status,proto3,enum=proto.chat_app.FileUploadStatus_UploadStatusCode" json:"status,omitempty"`
}

func (x *FileUploadStatus) Reset() {
	*x = FileUploadStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_app_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileUploadStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadStatus) ProtoMessage() {}

func (x *FileUploadStatus) ProtoReflect() protoreflect.Message {
	mi := &file_chat_app_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadStatus.ProtoReflect.Descriptor instead.
func (*FileUploadStatus) Descriptor() ([]byte, []int) {
	return file_chat_app_proto_rawDescGZIP(), []int{10}
}

func (x *FileUploadStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *FileUploadStatus) GetStatus() FileUploadStatus_UploadStatusCode {
	if x != nil {
		return x.Status
	}
	return FileUploadStatus_UNKNOWN_STATUS
}

type FileDownloadChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to DownloadData:
	//	*FileDownloadChunk_Info
	//	*FileDownloadChunk_Content
	DownloadData isFileDownloadChunk_DownloadData `protobuf_oneof:"DownloadData"`
}

func (x *FileDownloadChunk) Reset() {
	*x = FileDownloadChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_app_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDownloadChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDownloadChunk) ProtoMessage() {}

func (x *FileDownloadChunk) ProtoReflect() protoreflect.Message {
	mi := &file_chat_app_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDownloadChunk.ProtoReflect.Descriptor instead.
func (*FileDownloadChunk) Descriptor() ([]byte, []int) {
	return file_chat_app_proto_rawDescGZIP(), []int{11}
}

func (m *FileDownloadChunk) GetDownloadData() isFileDownloadChunk_DownloadData {
	if m != nil {
		return m.DownloadData
	}
	return nil
}

func (x *FileDownloadChunk) GetInfo() *FileDownloadChunk_FileDownload {
	if x, ok := x.GetDownloadData().(*FileDownloadChunk_Info); ok {
		return x.Info
	}
	return nil
}

func (x *FileDownloadChunk) GetContent() []byte {
	if x, ok := x.GetDownloadData().(*FileDownloadChunk_Content); ok {
		return x.Content
	}
	return nil
}

type isFileDownloadChunk_DownloadData interface {
	isFileDownloadChunk_DownloadData()
}

type FileDownloadChunk_Info struct {
	Info *FileDownloadChunk_FileDownload `protobuf:"bytes,1,opt,name=info,proto3,oneof"`
}

type FileDownloadChunk_Content struct {
	Content []byte `protobuf:"bytes,2,opt,name=content,proto3,oneof"`
}

func (*FileDownloadChunk_Info) isFileDownloadChunk_DownloadData() {}

func (*FileDownloadChunk_Content) isFileDownloadChunk_DownloadData() {}

type FileUploadChunk_FileUpload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName    string       `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	ChatMessage *ChatMessage `protobuf:"bytes,2,opt,name=chat_message,json=chatMessage,proto3" json:"chat_message,omitempty"`
}

func (x *FileUploadChunk_FileUpload) Reset() {
	*x = FileUploadChunk_FileUpload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_app_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileUploadChunk_FileUpload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadChunk_FileUpload) ProtoMessage() {}

func (x *FileUploadChunk_FileUpload) ProtoReflect() protoreflect.Message {
	mi := &file_chat_app_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadChunk_FileUpload.ProtoReflect.Descriptor instead.
func (*FileUploadChunk_FileUpload) Descriptor() ([]byte, []int) {
	return file_chat_app_proto_rawDescGZIP(), []int{9, 0}
}

func (x *FileUploadChunk_FileUpload) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileUploadChunk_FileUpload) GetChatMessage() *ChatMessage {
	if x != nil {
		return x.ChatMessage
	}
	return nil
}

type FileDownloadChunk_FileDownload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName    string       `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	ChatMessage *ChatMessage `protobuf:"bytes,2,opt,name=chat_message,json=chatMessage,proto3" json:"chat_message,omitempty"`
}

func (x *FileDownloadChunk_FileDownload) Reset() {
	*x = FileDownloadChunk_FileDownload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_app_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDownloadChunk_FileDownload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDownloadChunk_FileDownload) ProtoMessage() {}

func (x *FileDownloadChunk_FileDownload) ProtoReflect() protoreflect.Message {
	mi := &file_chat_app_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDownloadChunk_FileDownload.ProtoReflect.Descriptor instead.
func (*FileDownloadChunk_FileDownload) Descriptor() ([]byte, []int) {
	return file_chat_app_proto_rawDescGZIP(), []int{11, 0}
}

func (x *FileDownloadChunk_FileDownload) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileDownloadChunk_FileDownload) GetChatMessage() *ChatMessage {
	if x != nil {
		return x.ChatMessage
	}
	return nil
}

var File_chat_app_proto protoreflect.FileDescriptor

var file_chat_app_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70,
	0x22, 0x24, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x9c, 0x02, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x2c, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x45, 0x58, 0x50, 0x45, 0x52, 0x54, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x41, 0x54,
	0x49, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x22, 0x4d, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a,
	0x4c, 0x4f, 0x47, 0x47, 0x45, 0x44, 0x5f, 0x4f, 0x55, 0x54, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x4e, 0x4c,
	0x49, 0x4e, 0x45, 0x10, 0x03, 0x22, 0xc4, 0x01, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x3b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70,
	0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x2c,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x58, 0x50, 0x45, 0x52, 0x54, 0x10, 0x01, 0x12,
	0x0b, 0x0a, 0x07, 0x50, 0x41, 0x54, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x22, 0x59, 0x0a, 0x15,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x61, 0x70, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x86, 0x02, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64,
	0x12, 0x31, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x61, 0x70, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x06, 0x74, 0x6f, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x29, 0x0a, 0x11, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x66,
	0x6f, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x46, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0x80, 0x02, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3e, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4e, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x6d, 0x73, 0x67,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5b, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x44,
	0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x45,
	0x45, 0x4e, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x49,
	0x56, 0x45, 0x52, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45,
	0x44, 0x10, 0x04, 0x22, 0x84, 0x02, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x63,
	0x68, 0x61, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61,
	0x70, 0x70, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0b,
	0x63, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x50, 0x0a, 0x0a, 0x6d,
	0x73, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x09, 0x6d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5b, 0x0a,
	0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x0e, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x45, 0x45, 0x4e, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x4e,
	0x4f, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0a,
	0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x22, 0xad, 0x01, 0x0a, 0x14, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x31, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x61, 0x70, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x31, 0x12,
	0x2a, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x32, 0x12, 0x27, 0x0a, 0x0f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xa8, 0x01, 0x0a, 0x15, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x31, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x61, 0x70, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x31,
	0x12, 0x2a, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x32, 0x12, 0x37, 0x0a, 0x08,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x2e,
	0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0xe8, 0x01, 0x0a, 0x0f, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x40, 0x0a, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x69, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x22, 0xb3, 0x01, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x49, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3a, 0x0a, 0x10, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x0e, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41,
	0x49, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x22, 0xf2, 0x01, 0x0a, 0x11, 0x46, 0x69, 0x6c, 0x65, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x44, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x6b,
	0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x63,
	0x68, 0x61, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61,
	0x70, 0x70, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0b,
	0x63, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x32, 0xf7, 0x05, 0x0a, 0x10,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x3a, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x50, 0x0a, 0x0b,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x30, 0x01, 0x12, 0x4d,
	0x0a, 0x0e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70,
	0x70, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x54, 0x0a,
	0x10, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61,
	0x70, 0x70, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x23,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x2e,
	0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x21, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x52, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61,
	0x70, 0x70, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x5a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x61, 0x70, 0x70, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x51, 0x0a, 0x0a, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x1a,
	0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x28, 0x01, 0x12, 0x50, 0x0a, 0x0c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x61, 0x70, 0x70, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70,
	0x70, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x30, 0x01, 0x42, 0x3f, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6b,
	0x6f, 0x74, 0x6c, 0x69, 0x6e, 0x42, 0x07, 0x43, 0x68, 0x61, 0x74, 0x41, 0x70, 0x70, 0x50, 0x01,
	0x5a, 0x24, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x41, 0x70, 0x70, 0x2d, 0x67, 0x52, 0x50, 0x43,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chat_app_proto_rawDescOnce sync.Once
	file_chat_app_proto_rawDescData = file_chat_app_proto_rawDesc
)

func file_chat_app_proto_rawDescGZIP() []byte {
	file_chat_app_proto_rawDescOnce.Do(func() {
		file_chat_app_proto_rawDescData = protoimpl.X.CompressGZIP(file_chat_app_proto_rawDescData)
	})
	return file_chat_app_proto_rawDescData
}

var file_chat_app_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_chat_app_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_chat_app_proto_goTypes = []interface{}{
	(User_Type)(0),                         // 0: proto.chat_app.User.Type
	(User_UserStatusCode)(0),               // 1: proto.chat_app.User.UserStatusCode
	(ConnectUserRequest_Type)(0),           // 2: proto.chat_app.ConnectUserRequest.Type
	(ChatMessageStatus_MessageStatus)(0),   // 3: proto.chat_app.ChatMessageStatus.MessageStatus
	(ChatMessageResponse_MessageStatus)(0), // 4: proto.chat_app.ChatMessageResponse.MessageStatus
	(FileUploadStatus_UploadStatusCode)(0), // 5: proto.chat_app.FileUploadStatus.UploadStatusCode
	(*QueryUser)(nil),                      // 6: proto.chat_app.QueryUser
	(*User)(nil),                           // 7: proto.chat_app.User
	(*ConnectUserRequest)(nil),             // 8: proto.chat_app.ConnectUserRequest
	(*DisconnectUserRequest)(nil),          // 9: proto.chat_app.DisconnectUserRequest
	(*ChatMessage)(nil),                    // 10: proto.chat_app.ChatMessage
	(*ChatMessageStatus)(nil),              // 11: proto.chat_app.ChatMessageStatus
	(*ChatMessageResponse)(nil),            // 12: proto.chat_app.ChatMessageResponse
	(*QueryMessagesRequest)(nil),           // 13: proto.chat_app.QueryMessagesRequest
	(*QueryMessagesResponse)(nil),          // 14: proto.chat_app.QueryMessagesResponse
	(*FileUploadChunk)(nil),                // 15: proto.chat_app.FileUploadChunk
	(*FileUploadStatus)(nil),               // 16: proto.chat_app.FileUploadStatus
	(*FileDownloadChunk)(nil),              // 17: proto.chat_app.FileDownloadChunk
	(*FileUploadChunk_FileUpload)(nil),     // 18: proto.chat_app.FileUploadChunk.FileUpload
	(*FileDownloadChunk_FileDownload)(nil), // 19: proto.chat_app.FileDownloadChunk.FileDownload
}
var file_chat_app_proto_depIdxs = []int32{
	1,  // 0: proto.chat_app.User.status:type_name -> proto.chat_app.User.UserStatusCode
	0,  // 1: proto.chat_app.User.type:type_name -> proto.chat_app.User.Type
	2,  // 2: proto.chat_app.ConnectUserRequest.type:type_name -> proto.chat_app.ConnectUserRequest.Type
	7,  // 3: proto.chat_app.DisconnectUserRequest.user:type_name -> proto.chat_app.User
	7,  // 4: proto.chat_app.ChatMessage.from_user:type_name -> proto.chat_app.User
	7,  // 5: proto.chat_app.ChatMessage.to_user:type_name -> proto.chat_app.User
	10, // 6: proto.chat_app.ChatMessageStatus.chat_message:type_name -> proto.chat_app.ChatMessage
	3,  // 7: proto.chat_app.ChatMessageStatus.msg_status:type_name -> proto.chat_app.ChatMessageStatus.MessageStatus
	10, // 8: proto.chat_app.ChatMessageResponse.chat_message:type_name -> proto.chat_app.ChatMessage
	4,  // 9: proto.chat_app.ChatMessageResponse.msg_status:type_name -> proto.chat_app.ChatMessageResponse.MessageStatus
	7,  // 10: proto.chat_app.QueryMessagesRequest.user1:type_name -> proto.chat_app.User
	7,  // 11: proto.chat_app.QueryMessagesRequest.user2:type_name -> proto.chat_app.User
	7,  // 12: proto.chat_app.QueryMessagesResponse.user1:type_name -> proto.chat_app.User
	7,  // 13: proto.chat_app.QueryMessagesResponse.user2:type_name -> proto.chat_app.User
	10, // 14: proto.chat_app.QueryMessagesResponse.messages:type_name -> proto.chat_app.ChatMessage
	18, // 15: proto.chat_app.FileUploadChunk.info:type_name -> proto.chat_app.FileUploadChunk.FileUpload
	5,  // 16: proto.chat_app.FileUploadStatus.status:type_name -> proto.chat_app.FileUploadStatus.UploadStatusCode
	19, // 17: proto.chat_app.FileDownloadChunk.info:type_name -> proto.chat_app.FileDownloadChunk.FileDownload
	10, // 18: proto.chat_app.FileUploadChunk.FileUpload.chat_message:type_name -> proto.chat_app.ChatMessage
	10, // 19: proto.chat_app.FileDownloadChunk.FileDownload.chat_message:type_name -> proto.chat_app.ChatMessage
	6,  // 20: proto.chat_app.MessagingService.GetUser:input_type -> proto.chat_app.QueryUser
	8,  // 21: proto.chat_app.MessagingService.ConnectUser:input_type -> proto.chat_app.ConnectUserRequest
	9,  // 22: proto.chat_app.MessagingService.DisconnectUser:input_type -> proto.chat_app.DisconnectUserRequest
	10, // 23: proto.chat_app.MessagingService.BroadcastMessage:input_type -> proto.chat_app.ChatMessage
	11, // 24: proto.chat_app.MessagingService.UpdateMessageStatus:input_type -> proto.chat_app.ChatMessageStatus
	10, // 25: proto.chat_app.MessagingService.GetMessageStatus:input_type -> proto.chat_app.ChatMessage
	13, // 26: proto.chat_app.MessagingService.GetMessages:input_type -> proto.chat_app.QueryMessagesRequest
	15, // 27: proto.chat_app.MessagingService.UploadFile:input_type -> proto.chat_app.FileUploadChunk
	10, // 28: proto.chat_app.MessagingService.DownloadFile:input_type -> proto.chat_app.ChatMessage
	7,  // 29: proto.chat_app.MessagingService.GetUser:output_type -> proto.chat_app.User
	10, // 30: proto.chat_app.MessagingService.ConnectUser:output_type -> proto.chat_app.ChatMessage
	7,  // 31: proto.chat_app.MessagingService.DisconnectUser:output_type -> proto.chat_app.User
	12, // 32: proto.chat_app.MessagingService.BroadcastMessage:output_type -> proto.chat_app.ChatMessageResponse
	11, // 33: proto.chat_app.MessagingService.UpdateMessageStatus:output_type -> proto.chat_app.ChatMessageStatus
	11, // 34: proto.chat_app.MessagingService.GetMessageStatus:output_type -> proto.chat_app.ChatMessageStatus
	14, // 35: proto.chat_app.MessagingService.GetMessages:output_type -> proto.chat_app.QueryMessagesResponse
	16, // 36: proto.chat_app.MessagingService.UploadFile:output_type -> proto.chat_app.FileUploadStatus
	17, // 37: proto.chat_app.MessagingService.DownloadFile:output_type -> proto.chat_app.FileDownloadChunk
	29, // [29:38] is the sub-list for method output_type
	20, // [20:29] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_chat_app_proto_init() }
func file_chat_app_proto_init() {
	if File_chat_app_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chat_app_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_app_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_app_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_app_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisconnectUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_app_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_app_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessageStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_app_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_app_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_app_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMessagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_app_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileUploadChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_app_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileUploadStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_app_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDownloadChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_app_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileUploadChunk_FileUpload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_app_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDownloadChunk_FileDownload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_chat_app_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*FileUploadChunk_Info)(nil),
		(*FileUploadChunk_Content)(nil),
	}
	file_chat_app_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*FileDownloadChunk_Info)(nil),
		(*FileDownloadChunk_Content)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chat_app_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chat_app_proto_goTypes,
		DependencyIndexes: file_chat_app_proto_depIdxs,
		EnumInfos:         file_chat_app_proto_enumTypes,
		MessageInfos:      file_chat_app_proto_msgTypes,
	}.Build()
	File_chat_app_proto = out.File
	file_chat_app_proto_rawDesc = nil
	file_chat_app_proto_goTypes = nil
	file_chat_app_proto_depIdxs = nil
}
