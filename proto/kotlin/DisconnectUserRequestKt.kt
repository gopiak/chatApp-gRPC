//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: chatapp/chat_app.proto

package proto.kotlin;

@kotlin.jvm.JvmSynthetic
inline fun disconnectUserRequest(block: proto.kotlin.DisconnectUserRequestKt.Dsl.() -> Unit): proto.kotlin.DisconnectUserRequest =
  proto.kotlin.DisconnectUserRequestKt.Dsl._create(proto.kotlin.DisconnectUserRequest.newBuilder()).apply { block() }._build()
object DisconnectUserRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: proto.kotlin.DisconnectUserRequest.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: proto.kotlin.DisconnectUserRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): proto.kotlin.DisconnectUserRequest = _builder.build()

    /**
     * <code>.proto.chat_app.User user = 1;</code>
     */
    var user: proto.kotlin.User
      @JvmName("getUser")
      get() = _builder.getUser()
      @JvmName("setUser")
      set(value) {
        _builder.setUser(value)
      }
    /**
     * <code>.proto.chat_app.User user = 1;</code>
     */
    fun clearUser() {
      _builder.clearUser()
    }
    /**
     * <code>.proto.chat_app.User user = 1;</code>
     * @return Whether the user field is set.
     */
    fun hasUser(): kotlin.Boolean {
      return _builder.hasUser()
    }

    /**
     * <code>string device = 2;</code>
     */
    var device: kotlin.String
      @JvmName("getDevice")
      get() = _builder.getDevice()
      @JvmName("setDevice")
      set(value) {
        _builder.setDevice(value)
      }
    /**
     * <code>string device = 2;</code>
     */
    fun clearDevice() {
      _builder.clearDevice()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun proto.kotlin.DisconnectUserRequest.copy(block: proto.kotlin.DisconnectUserRequestKt.Dsl.() -> Unit): proto.kotlin.DisconnectUserRequest =
  proto.kotlin.DisconnectUserRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()
