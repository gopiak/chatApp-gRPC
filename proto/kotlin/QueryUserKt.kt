//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: chatapp/chat_app.proto

package proto.kotlin;

@kotlin.jvm.JvmSynthetic
inline fun queryUser(block: proto.kotlin.QueryUserKt.Dsl.() -> Unit): proto.kotlin.QueryUser =
  proto.kotlin.QueryUserKt.Dsl._create(proto.kotlin.QueryUser.newBuilder()).apply { block() }._build()
object QueryUserKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: proto.kotlin.QueryUser.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: proto.kotlin.QueryUser.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): proto.kotlin.QueryUser = _builder.build()

    /**
     * <code>string user_id = 1;</code>
     */
    var userId: kotlin.String
      @JvmName("getUserId")
      get() = _builder.getUserId()
      @JvmName("setUserId")
      set(value) {
        _builder.setUserId(value)
      }
    /**
     * <code>string user_id = 1;</code>
     */
    fun clearUserId() {
      _builder.clearUserId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun proto.kotlin.QueryUser.copy(block: proto.kotlin.QueryUserKt.Dsl.() -> Unit): proto.kotlin.QueryUser =
  proto.kotlin.QueryUserKt.Dsl._create(this.toBuilder()).apply { block() }._build()
